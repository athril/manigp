parent.0 = koza.params

pop.default-subpop = 0

pop.subpops= 1

pop.subpop.0.species.fitness = ec.simple.SimpleFitness

stat.num-children = 1
stat.child.0 = featureLearn.FeatureLearnStatistics

gp.nc.size = 8

gp.nc.7 = ec.gp.GPNodeConstraints
gp.nc.7.name = nc10
gp.nc.7.returns = nil
gp.nc.7.size = 10
gp.nc.7.child.0 = nil
gp.nc.7.child.1 = nil
gp.nc.7.child.2 = nil
gp.nc.7.child.3 = nil
gp.nc.7.child.4 = nil
gp.nc.7.child.5 = nil
gp.nc.7.child.6 = nil
gp.nc.7.child.7 = nil
gp.nc.7.child.8 = nil
gp.nc.7.child.9 = nil


# We have one function set, of class GPFunctionSet
gp.fs.size = 1
gp.fs.0 = ec.gp.GPFunctionSet
# We'll call the function set "f0".
gp.fs.0.name = f0

# We have five functions in the function set.  They are:
gp.fs.0.size = 10
gp.fs.0.func.0 = gp.MultiXLearningNode
gp.fs.0.func.0.nc = nc0

gp.fs.0.func.1 = gp.Add
gp.fs.0.func.1.nc = nc2

gp.fs.0.func.2 = gp.Mul
gp.fs.0.func.2.nc = nc2

gp.fs.0.func.3 = gp.NegativeDoubleConstantNode
gp.fs.0.func.3.nc = nc0

gp.fs.0.func.4 = gp.K5Add
gp.fs.0.func.4.nc = nc5

gp.fs.0.func.5 = gp.ReLU
gp.fs.0.func.5.nc = nc1

gp.fs.0.func.6 = gp.If
gp.fs.0.func.6.nc = nc3

gp.fs.0.func.7 = gp.Sigmoid
gp.fs.0.func.7.nc = nc1



gp.fs.0.func.8 = gp.Max
gp.fs.0.func.8.nc = nc2
gp.fs.0.func.9 = gp.Min
gp.fs.0.func.9.nc = nc2

#gp.fs.0.func.9 = gp.K10Add
#gp.fs.0.func.9.nc = nc10

#eval.problem = featureLearn.NearestNeighbourFLProblem
#eval.problem = featureLearn.FuzzyGaussianNNRankingFLProblem
eval.problem = featureLearn.FGNNRFLSubsetProblem
#eval.problem = featureLearn.FGNNRFLSPushProblem
#eval.problem = featureLearn.FGNNRFLSGraphProblem
eval.problem.data = gp.DoubleData

evalthreads = 6
breedthreads=6
generations = 1000
pop.subpop.0.size = 1024

breed.reproduce.source.0 = ec.select.TournamentSelection
#breed.reproduce.source.0 = ec.parsimony.ProportionalTournamentSelection
#breed.reproduce.source.0.size = 7
#breed.reproduce.source.0.pick-worst = false
#breed.reproduce.source.0.num-buckets = 10
#breed.reproduce.source.0.fitness-prob = 0.5
#breed.reproduce.source.0 = ec.parsimony.BucketTournamentSelection

#pop.subpop.0.species.pipe = featureLearn.SimplifyPipeline
#pop.subpop.0.species.pipe.source.0 = ec.breed.MultiBreedingPipeline
#pop.subpop.0.species.pipe.source.0.generate-max = false
#pop.subpop.0.species.pipe.source.0.num-sources = 2


# Subsidiary pipelines:
#pop.subpop.0.species.pipe.source.0.source.0 = ec.gp.koza.CrossoverPipeline
#pop.subpop.0.species.pipe.source.0.source.0.prob = 0.80
#pop.subpop.0.species.pipe.source.0.source.1 = ec.gp.koza.MutationPipeline
#pop.subpop.0.species.pipe.source.0.source.1.prob = 0.20


pop.subpop.0.species.pipe = ec.breed.MultiBreedingPipeline
pop.subpop.0.species.pipe.generate-max = false
pop.subpop.0.species.pipe.num-sources = 2

# Subsidiary pipelines:
pop.subpop.0.species.pipe.source.0 = ec.gp.koza.CrossoverPipeline
pop.subpop.0.species.pipe.source.0.prob = 0.80
pop.subpop.0.species.pipe.source.1 = ec.gp.koza.MutationPipeline
pop.subpop.0.species.pipe.source.1.prob = 0.20

breed.elite.0 = 10
